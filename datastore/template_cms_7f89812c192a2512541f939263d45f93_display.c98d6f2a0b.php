<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_cms_database_display\n{\n\tfunction comment( $item, $comment, $editorName, $app, $type, $class='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$itemIdField = $item::$databaseColumnId; $idField = $comment::$databaseColumnId;\n$return .= <<<CONTENT\n\n<div id='comment-\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrap' data-controller='core.front.core.comment' data-commentApp='\nCONTENT;\n$return .= htmlspecialchars( $app, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-commentType='\nCONTENT;\n$return .= htmlspecialchars( $type, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-commentID=\"\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-quoteData='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( array('userid' => $comment->author()->member_id, 'username' => $comment->author()->name, 'timestamp' => $comment->mapped('date'), 'contentapp' => $app, 'contenttype' => $type, 'contentclass' => $class, 'contentid' => $item->$itemIdField, 'contentcommentid' => $comment->$idField) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='cPost_content ipsComment_content ipsType_medium \nCONTENT;\n\nif ( $comment->hidden() ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsFaded_withHover'>\n\t\nCONTENT;\n\nif ( \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_highlight and $comment->reactionCount() >= \\IPS\\Settings::i()->reputation_highlight and \\IPS\\Settings::i()->reputation_enabled ):\n$return .= <<<CONTENT\n\n\t\t<strong class='ipsComment_popularFlag' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'this_is_a_popular_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-heart'><\/i><\/strong>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\n\t<div class='ipsComment_header ipsPhotoPanel ipsPhotoPanel_mini ipsPhotoPanel_notPhone'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $comment->author(), 'mini', $comment->warningRef() );\n$return .= <<<CONTENT\n\n\t\t<div>\n\t\t\t<div class='ipsPos_right ipsType_reset ipsType_light ipsType_blendLinks'>\n\t\t\t\t<ul class='ipsList_inline ipsComment_tools'>\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canReport() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('report'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-remoteSubmit data-ipsDialog-size='medium' data-ipsDialog-flashMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_submit_success', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-action='reportComment' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><span class='ipsResponsive_showPhone ipsResponsive_inline'><i class='fa fa-flag'><\/i><\/span><span class='ipsResponsive_hidePhone ipsResponsive_inline'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_reply', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_use_ip_tools') and \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'modcp' ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li><span class='ipsResponsive_hidePhone ipsType_blendLinks'>(<a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=modcp&controller=modcp&tab=ip_tools&ip=$comment->ip_address\", null, \"modcp_ip_tools\", array(), 0 ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$sprintf = array($comment->ip_address); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ip_prefix', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a>) <\/span><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t\t<li><a class='ipsType_blendLinks' href='\nCONTENT;\n$return .= htmlspecialchars( $comment->item()->url()->setQueryString( array( 'do' => 'findComment', 'comment' => $comment->$idField ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share_this_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsMenu data-ipsMenu-closeOnClick='false' id='elShareComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role='shareComment'><i class='fa fa-share-alt'><\/i><\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nif ( count( $item->commentMultimodActions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li><span class='ipsCustomInput'>\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"multimod[\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"1\" data-role=\"moderation\" data-actions=\"\nCONTENT;\n\nif ( $comment->canSplit() ):\n$return .= <<<CONTENT\nsplit merge\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $comment->hidden() === -1 AND $comment->canUnhide() ):\n$return .= <<<CONTENT\nunhide\nCONTENT;\n\nelseif ( $comment->hidden() === 1 AND $comment->canUnhide() ):\n$return .= <<<CONTENT\napprove\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $comment->hidden() !== -1 AND $comment->canHide() ):\n$return .= <<<CONTENT\nhide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $comment->canDelete() ):\n$return .= <<<CONTENT\ndelete\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n\nif ( $comment->tableStates() ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $comment->tableStates(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t\t<h3 class='ipsComment_author ipsType_blendLinks'>\n\t\t\t\t<strong class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->userLink( $comment->author(), $comment->warningRef() );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->reputationBadge( $comment->author() );\n$return .= <<<CONTENT\n\n\t\t\t<\/h3>\n\t\t\t<p class='ipsComment_meta ipsType_light ipsType_medium'>\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->item()->url()->setQueryString( array( 'do' => 'findComment', 'comment' => $comment->$idField ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>{$comment->dateLine()}<\/a>\n\t\t\t\t\nCONTENT;\n\nif ( $comment->editLine() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t(\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edited_lc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n)\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $comment->hidden() AND $comment->hidden() != -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot; \nCONTENT;\n$return .= htmlspecialchars( $comment->hiddenBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( $comment->hidden() == -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot; \nCONTENT;\n$return .= htmlspecialchars( $comment->deletedBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('mod_see_warn') and $comment->warning ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->commentWarned( $comment );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsAreaBackground_reset ipsPad'>\t\t\n\t\t<div data-role='commentContent' class='ipsType_normal ipsType_richText ipsContained' data-controller='core.front.core.lightboxedImages'>\n\t\t\t\nCONTENT;\n\nif ( $comment->hidden() === 1 && $comment->author()->member_id == \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\t\t\t<strong class='ipsType_medium ipsType_warning'><i class='fa fa-info-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'comment_awaiting_approval', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t{$comment->content()}\n\t\t\t\n\t\t\t\nCONTENT;\n\nif ( $comment->editLine() ):\n$return .= <<<CONTENT\n\n\t\t\t\t{$comment->editLine()}\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\n\t\t<Div class='ipsItemControls'>\n\t\t\t\nCONTENT;\n\nif ( $comment->hidden() !== 1 && \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->reputation( $comment );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<ul class='ipsComment_controls ipsClearfix ipsItemControls_left' data-role=\"commentControls\">\n\t\t\t\t\nCONTENT;\n\nif ( $comment->hidden() === 1 && ( $comment->canUnhide() || $comment->canDelete() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('unhide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_positive' data-action='approveComment'><i class='fa fa-check'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('delete')->csrf()->setQueryString('page',\\IPS\\Request::i()->page), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-action='deleteComment' data-updateOnDelete=\"#commentCount\" class='ipsButton ipsButton_verySmall ipsButton_negative'><i class='fa fa-times'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canEdit() || $comment->canSplit() || $comment->canHide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='#elControls_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elControls_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsMenu data-ipsMenu-appendTo='#comment-\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrap'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t<ul id='elControls_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' class='ipsMenu ipsMenu_narrow ipsHide'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->mapped('first') and $comment->item()->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->item()->url()->setQueryString( 'do', 'edit' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('edit'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='editComment'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canSplit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('split'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='splitComment' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $item::$title )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'split_to_new', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'split', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment instanceof \\IPS\\Content\\Hideable and $comment->canHide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('hide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->hidden() === 0 and $item->canComment() and $editorName ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li data-ipsQuote-editor='\nCONTENT;\n$return .= htmlspecialchars( $editorName, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsQuote-target='#comment-\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsJS_show'>\n\t\t\t\t\t\t\t<button class='ipsButton ipsButton_light ipsButton_verySmall ipsButton_narrow cMultiQuote ipsHide' data-action='multiQuoteComment' data-ipsTooltip data-ipsQuote-multiQuote data-mqId='mq\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'multiquote', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-plus'><\/i><\/button>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t<li data-ipsQuote-editor='\nCONTENT;\n$return .= htmlspecialchars( $editorName, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsQuote-target='#comment-\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsJS_show'>\n\t\t\t\t\t\t\t<a href='#' data-action=\"quoteComment\" data-ipsQuote-singleQuote>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'quote', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->mapped('first') and $comment->item()->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->item()->url()->setQueryString( 'do', 'edit' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('edit'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='editComment'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canPromoteToSocialMedia() || $comment->canDelete() || $comment->canSplit() || ( $comment instanceof \\IPS\\Content\\Hideable AND ( ( !$comment->hidden() and $comment->canHide() ) || ( $comment->hidden() and $comment->canUnhide() ) ) ) || ( $comment->hidden() == -2 and \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href='#elControls_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elControls_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsMenu data-ipsMenu-appendTo='#comment-\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrap'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t<ul id='elControls_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' class='ipsMenu ipsMenu_narrow ipsHide'>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('restore')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('restore')->csrf()->setQueryString( 'restoreAsHidden', 1 ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('delete')->csrf()->setQueryString( 'immediately', 1 ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment instanceof \\IPS\\Content\\Hideable ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$comment->hidden() and $comment->canHide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('hide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $comment->hidden() and $comment->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('unhide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canSplit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('split'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='splitComment' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $item::$title )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'split_to_new', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'split', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('delete')->csrf()->setQueryString('page',\\IPS\\Request::i()->page), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='deleteComment' data-updateOnDelete=\"#commentCount\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->isFeatured() AND $item->canUnfeatureComment() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('unfeature')->csrf()->setQueryString('page',\\IPS\\Request::i()->page), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unrecommend_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$comment->isFeatured() AND $item->canFeatureComment() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $comment->url('feature')->csrf()->setQueryString('page',\\IPS\\Request::i()->page), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'recommend_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-remoteSubmit data-ipsDialog-size='narrow'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'recommend_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $comment->canPromoteToSocialMedia() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'>\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->promoteLink( $comment );\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t<li class='ipsHide' data-role='commentLoading'>\n\t\t\t\t\t<span class='ipsLoading ipsLoading_tiny ipsLoading_noAnim'><\/span>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsMenu ipsMenu_wide ipsHide cPostShareMenu' id='elShareComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t<div class='ipsPad'>\n\t\t\t<h4 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share_this_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t<hr class='ipsHr'>\n\t\t\t<h5 class='ipsType_normal ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_to_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h5>\n\t\t\t<input type='text' value='\nCONTENT;\n$return .= htmlspecialchars( $comment->item()->url()->setQueryString( array( 'do' => 'findComment', 'comment' => $comment->$idField ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsField_fullWidth'>\n\t\t\t\nCONTENT;\n\nif ( !$comment->item()->container()->disable_sharelinks ):\n$return .= <<<CONTENT\n\n\t\t\t<h5 class='ipsType_normal ipsType_reset ipsSpacer_top'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share_externally', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h5>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->sharelinks( $comment );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction commentContainer( $item, $comment, $votes=array(), $otherClasses='' ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$idField = $comment::$databaseColumnId;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$itemClassSafe = str_replace( '\\\\', '_', mb_substr( $comment::$itemClass, 4 ) );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $comment->isIgnored() ):\n$return .= <<<CONTENT\n\n\t<div class='ipsComment ipsComment_ignored ipsPad_half ipsType_light' id='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ignoreCommentID='elComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ignoreUserID='\nCONTENT;\n$return .= htmlspecialchars( $comment->author()->member_id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\nCONTENT;\n\n$sprintf = array($comment->author()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignoring_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <a href='#elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' data-ipsMenu data-ipsMenu-menuID='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' data-ipsMenu-appendTo='#elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action=\"ignoreOptions\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'see_post_ignore_options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsType_blendLinks'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t<ul class='ipsMenu ipsHide' id='elIgnoreComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='showPost'><a href='#'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'show_this_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<li class='ipsMenu_sep'><hr><\/li>\n\t\t\t<li class='ipsMenu_item' data-ipsMenuValue='stopIgnoring'><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore&do=remove&id={$comment->author()->member_id}\", null, \"ignore\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$sprintf = array($comment->author()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'stop_ignoring_posts_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=ignore\", null, \"ignore\", array(), 0 ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'change_ignore_preferences', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t<\/ul>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<a id='comment-\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/a>\n<article \nCONTENT;\n\nif ( $comment->author()->hasHighlightedReplies() ):\n$return .= <<<CONTENT\ndata-memberGroup=\"\nCONTENT;\n$return .= htmlspecialchars( $comment->author()->member_group_id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n id='elComment_\nCONTENT;\n$return .= htmlspecialchars( $comment->$idField, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsComment \nCONTENT;\n\nif ( $otherClasses ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $otherClasses, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\IPS\\IPS::classUsesTrait( $comment, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_highlight and $comment->reactionCount() >= \\IPS\\Settings::i()->reputation_highlight and \\IPS\\Settings::i()->reputation_enabled ):\n$return .= <<<CONTENT\nipsComment_popular\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n ipsComment_parent ipsClearfix ipsClear \nCONTENT;\n\nif ( $comment->author()->hasHighlightedReplies() ):\n$return .= <<<CONTENT\nipsComment_highlighted\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $comment->isIgnored() ):\n$return .= <<<CONTENT\nipsHide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $comment->hidden() OR $item->hidden() == -2 ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"display\", \"cms\", 'database' )->comment( $item, $comment, $item::$formLangPrefix . 'comment', $item::$application, $item::$module, $itemClassSafe );\n$return .= <<<CONTENT\n\n<\/article>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction comments( $record ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.front.core.commentFeed, core.front.core.ignoredComments' \nCONTENT;\n\nif ( \\IPS\\Settings::i()->auto_polling_enabled ):\n$return .= <<<CONTENT\ndata-autoPoll\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-commentsType='comments' data-baseURL='\nCONTENT;\n$return .= htmlspecialchars( $record->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $record->isLastPage() ):\n$return .= <<<CONTENT\ndata-lastPage\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-feedID='records\nCONTENT;\n$return .= htmlspecialchars( $record::$customDatabaseId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-\nCONTENT;\n$return .= htmlspecialchars( $record->_id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' id='comments'>\n\t\nCONTENT;\n\nif ( $record->commentPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t{$record->commentPagination( array( 'tab' ) )}\n\t\t<br><br>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->featuredComments( $record->featuredComments(), $record->url()->setQueryString('tab', 'comments')->setQueryString('recommended', 'comments') );\n$return .= <<<CONTENT\n\n\n\t<div data-role='commentFeed' data-controller='core.front.core.moderation'>\n\t\t\nCONTENT;\n\nif ( count( $record->comments( NULL, NULL, 'date', 'asc', NULL, NULL, NULL, NULL, FALSE, isset( \\IPS\\Request::i()->showDeleted ) ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t<form action=\"\nCONTENT;\n$return .= htmlspecialchars( $record->url()->csrf()->setQueryString( 'do', 'multimodComment' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-ipsPageAction data-role='moderationTools'>\n\t\t\t\t\nCONTENT;\n\n$commentCount=0; $timeLastRead = $record->timeLastRead(); $lined = FALSE;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $record->comments( NULL, NULL, 'date', 'asc', NULL, NULL, NULL, NULL, FALSE, isset( \\IPS\\Request::i()->showDeleted ) ) as $comment ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$lined and $timeLastRead and $timeLastRead->getTimestamp() < $comment->mapped('date') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $lined = TRUE and $commentCount ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<hr class=\"ipsCommentUnreadSeperator\">\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$commentCount++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$comment->html()}\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->commentMultimod( $record );\n$return .= <<<CONTENT\n\n\t\t\t<\/form>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<p class='ipsType_normal ipsType_light ipsType_reset' data-role='noComments'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_comments', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( $record->commentPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t<hr class='ipsHr'>\n\t\t{$record->commentPagination( array( 'tab' ) )}\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $record->commentForm() || $record->locked() || \\IPS\\Member::loggedin()->restrict_post || \\IPS\\Member::loggedIn()->members_bitoptions['unacknowledged_warnings'] ):\n$return .= <<<CONTENT\n\n\t\t<br><br>\n\t\t<div class='ipsAreaBackground ipsPad' data-role='replyArea'>\n\t\t\t\nCONTENT;\n\nif ( $record->commentForm() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $record->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<p class='ipsType_reset ipsType_warning ipsComposeArea_warning ipsSpacer_bottom ipsSpacer_half'><i class='fa fa-info-circle'><\/i> \nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_locked_can_comment', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t{$record->commentForm()}\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $record->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'record_locked_cannot_comment' );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedin()->restrict_post ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'restricted_cannot_comment', \\IPS\\Member::loggedIn()->warnings(5,NULL,'rpa'), \\IPS\\Member::loggedIn()->restrict_post );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedIn()->members_bitoptions['unacknowledged_warnings'] ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'unacknowledged_warning_cannot_post', \\IPS\\Member::loggedIn()->warnings( 1, FALSE ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction commentsAndReviewsTabs( $content, $id ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.front.core.commentsWrapper' data-tabsId='\nCONTENT;\n$return .= htmlspecialchars( $id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t{$content}\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction filtersAddComment( $rows ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div>\n\t\nCONTENT;\n\nforeach ( $rows as $line ):\n$return .= <<<CONTENT\n\n\t\t<p>{$line}<\/p>\n\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction record( $record, $commentsAndReviews, $updateForm=NULL, $nextUnread=NULL ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div class='ipsPageHeader ipsClearfix'>\n\t\n\t<div class='ipsPos_right ipsResponsive_noFloat ipsResponsive_hidePhone'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->follow( 'cms', 'records'.$record::$customDatabaseId, $record->primary_id_field, $record->followers()->count( TRUE ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<div class='ipsPos_right ipsResponsive_noFloat ipsResponsive_hidePhone'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->promote( $record );\n$return .= <<<CONTENT\n\n\t<\/div>\n\t<h1 class='ipsType_pageTitle ipsContained_container'>\n\t\t\nCONTENT;\n\nif ( $record->locked() ):\n$return .= <<<CONTENT\n<span><i class='fa fa-lock'><\/i><\/span> \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( $record->isFutureDate() || $record->mapped('pinned') || $record->mapped('featured') || $record->hidden() === -1 || $record->hidden() === 1 || $record->hidden() === -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->isFutureDate() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $record->futureDateBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-clock-o'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nelseif ( $record->hidden() === -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $record->hiddenBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-eye-slash'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nelseif ( $record->hidden() === -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsbadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n$return .= htmlspecialchars( $record->deletedBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><i class='fa fa-trash'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nelseif ( $record->hidden() === 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_warning\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pending_approval', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-warning'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->mapped('pinned') ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pinned', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-thumb-tack'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->mapped('featured') ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span><span class=\"ipsBadge ipsBadge_icon ipsBadge_positive\" data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'featured', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class='fa fa-star'><\/i><\/span><\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( $record->prefix() OR ( $record->canEdit() AND $record::canTag( NULL, $record->container() ) AND $record::canPrefix( NULL, $record->container() ) ) ):\n$return .= <<<CONTENT\n\n\t\t\t<span \nCONTENT;\n\nif ( !$record->prefix() ):\n$return .= <<<CONTENT\nclass='ipsHide'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( ( $record->canEdit() AND $record::canTag( NULL, $record->container() ) AND $record::canPrefix( NULL, $record->container() ) ) ):\n$return .= <<<CONTENT\ndata-editablePrefix\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->prefix( $record->prefix( TRUE ), $record->prefix() );\n$return .= <<<CONTENT\n\n\t\t\t<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $record->canEditTitle() ):\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_break ipsContained' data-controller=\"core.front.core.moderation\">\n\t\t\t\t<span data-role=\"editableTitle\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'click_hold_edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n$return .= htmlspecialchars( $record->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/span>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t<span class='ipsType_break ipsContained'>\nCONTENT;\n$return .= htmlspecialchars( $record->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/h1>\n\t\n\t\nCONTENT;\n\nif ( $record::database()->options['reviews'] ):\n$return .= <<<CONTENT\n\n\t\t<div>\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\", 'front' )->rating( 'large', $record->averageReviewRating(), \\IPS\\Settings::i()->reviews_rating_out_of, $record->memberReviewRating() );\n$return .= <<<CONTENT\n&nbsp;&nbsp; <span class='ipsType_normal ipsType_light'>(\nCONTENT;\n\n$pluralize = array( $record->record_reviews ); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'num_reviews', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'pluralize' => $pluralize ) );\n$return .= <<<CONTENT\n)<\/span>\n\t\t<\/div>\n\t\nCONTENT;\n\nelseif ( $record->container()->allow_rating ):\n$return .= <<<CONTENT\n\n\t\t<div>{$record->rating()}<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n<\/div>\n\n<hr class='ipsHr'>\n\n<div class='ipsPhotoPanel ipsPhotoPanel_tiny ipsClearfix ipsSpacer_bottom'>\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $record->author(), 'tiny', $record->warningRef() );\n$return .= <<<CONTENT\n\n\t<div>\n\t\t<p class='ipsType_reset ipsType_large ipsType_blendLinks'>\n\t\t\t\nCONTENT;\n\n$htmlsprintf = array($record->author()->link()); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_record_started_by', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->editLine() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span class='ipsType_light ipsType_medium ipsType_reset'>\n\t\t\t\t\t(\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edited_lc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n)\n\t\t\t\t<\/span>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/p>\n\t\t<ul class='ipsList_inline'>\n\t\t\t<li>\nCONTENT;\n\n$val = ( $record->record_publish_date instanceof \\IPS\\DateTime ) ? $record->record_publish_date : \\IPS\\DateTime::ts( $record->record_publish_date );$return .= $val->html();\n$return .= <<<CONTENT\n<\/li>\n\t\t\t\nCONTENT;\n\nforeach ( $record->customFieldsForDisplay('display_top') as $fieldId => $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$fieldValue}\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/div>\t\n\n\nCONTENT;\n\nif ( count( $record->tags() ) OR ( $record->canEdit() AND $record::canTag( NULL, $record->container() ) ) ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->tags( $record->tags(), FALSE, FALSE, ( $record->canEdit() AND $record::canTag( NULL, $record->container() ) ) ? $record->url() : NULL );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\n\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->contentItemMessages( $record->getMessages(), $record );\n$return .= <<<CONTENT\n\n\n<article class='ipsContained ipsSpacer_top ipsBox ipsPad'>\n\t<div class='ipsClearfix'>\n\t\t\nCONTENT;\n\nif ( $record->record_image ):\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"cCmsRecord_image\">\n\t\t\t\t<img class=\"ipsImage\" src=\"\nCONTENT;\n\n$return .= \\IPS\\File::get( \"cms_Records\", $record->_record_image_thumb )->url;\n$return .= <<<CONTENT\n\">\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<section class=\"ipsType_richText ipsType_normal\" data-controller='core.front.core.lightboxedImages'>{$record->_content}<\/section>\n\t\t\n\t\t\nCONTENT;\n\nif ( $record->editLine() ):\n$return .= <<<CONTENT\n\n\t\t\t{$record->editLine()}\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\n\t\t\nCONTENT;\n\nif ( $records = $record->getReciprocalItems() ):\n$return .= <<<CONTENT\n\n\t\t\t<br>\n\t\t\t\nCONTENT;\n\nforeach ( $records as $fieldId => $items ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$infoLineShown = FALSE;\n$return .= <<<CONTENT\n\n\t\t\t\t<ul class=\"ipsList_inline ipsList_csv ipsList_noSpacing\">\n\t\t\t\t\nCONTENT;\n\nforeach ( $items as $item ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li>\nCONTENT;\n\nif ( ! $infoLineShown ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$infoLineShown=TRUE;\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($item::database()->recordWord(0,TRUE), $record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'records_linking_to_me', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $item->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\">\nCONTENT;\n$return .= htmlspecialchars( $item->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t<\/ul>\n\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( $bottomFields = $record->customFieldsForDisplay('display_bottom') ):\n$return .= <<<CONTENT\n\n\t\t<hr class='ipsHr ipsClear ipsClearfix'>\n\t\t\nCONTENT;\n\nforeach ( $bottomFields as $fieldId => $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $fieldValue ):\n$return .= <<<CONTENT\n\n\t\t\t\t{$fieldValue}\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\n\t<div class='ipsItemControls'>\n\t\t\nCONTENT;\n\nif ( \\IPS\\IPS::classUsesTrait( $record, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->reputation( $record );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<ul class='ipsToolList ipsToolList_horizontal ipsPos_left ipsClearfix ipsResponsive_noFloat ipsItemControls_left'>\n\t\t\t\nCONTENT;\n\nif ( ( $record->isFutureDate() or $record->canPin() or $record->canUnpin() or $record->canFeature() or $record->canUnfeature() or $record->canHide() or $record->canUnhide() or $record->canMove() or $record->canLock() or $record->canUnlock() or $record->canDelete() ) or ( $record->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content')) ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href='#elentryActions_menu' id='elentryActions' class='ipsButton ipsButton_light ipsButton_verySmall ipsButton_fullWidth' data-ipsMenu>\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1, TRUE )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_record_actions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n <i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t<ul id='elentryActions_menu' class='ipsMenu ipsMenu_auto ipsHide'>\n\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') AND $record->hidden() == -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'restore' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'restoreAsHidden' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url()->csrf()->setQueryString( array( 'do' => 'moderate', 'action' => 'delete', 'immediate' => 1 ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->isFutureDate() and $record::canFuturePublish( NULL, $record->container() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'publish' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'publish_now', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'publish', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canFeature() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'feature' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'feature_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'feature', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canUnfeature() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'unfeature' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unfeature_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unfeature', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canPin() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'pin' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pin_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'pin', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canUnpin() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'unpin' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unpin_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unpin', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canHide() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'hide' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canUnhide() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'unhide' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\nif ( $record->hidden() === 1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( $record->hidden() === 1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canLock() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'lock' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lock_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'lock', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canUnlock() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'unlock' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlock_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unlock', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canMove() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('move')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"  title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'move', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canDelete() ):\n$return .= <<<CONTENT\n\t\t\t\t\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('moderate')->csrf()->setQueryString( array( 'action' => 'delete' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm  title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord(1)); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_title_record', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $record->canOnMessage( 'add' ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('messageForm')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_message', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_message', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_view_moderation_log') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li class='ipsMenu_sep'><hr><\/li>\n\t\t\t\t\t\t\t\t<li class=\"ipsMenu_item\"><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url()->csrf()->setQueryString( array( 'do' => 'modLog' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_history', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_history', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/ul>\n\t\t\t\t<\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('edit')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_link ipsButton_fullWidth'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->canReport() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('report'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_link ipsButton_fullWidth' data-ipsDialog data-ipsDialog-size='medium' data-ipsDialog-title=\"\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1, TRUE )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_record_report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\" data-ipsDialog-remoteSubmit data-ipsDialog-flashMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_submit_success', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1, TRUE )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_record_report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1, TRUE )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_record_report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $record->canManageRevisions() ):\n$return .= <<<CONTENT\n\n\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('revisions'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_link ipsButton_fullWidth' title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_view_revisions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_view_revisions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/ul>\n\t<\/div>\n<\/article>\n\n<div class='ipsResponsive_showPhone ipsResponsive_block ipsSpacer_top'>\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->follow( 'cms', 'records'.$record::$customDatabaseId, $record->primary_id_field, $record->followers()->count( TRUE ) );\n$return .= <<<CONTENT\n\n<\/div>\n<div class='ipsResponsive_showPhone ipsResponsive_block ipsSpacer_top'>\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->promote( $record );\n$return .= <<<CONTENT\n\n<\/div>\n\n<div class='ipsGrid ipsGrid_collapsePhone ipsPager ipsClearfix ipsSpacer_top'>\n\t<div class=\"ipsGrid_span6 ipsType_left ipsPager_prev\">\n\t\t\nCONTENT;\n\nif ( $record::database()->use_categories ):\n$return .= <<<CONTENT\n\n\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $record->container()->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$sprintf = array($record->container()->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_back_to_category_with_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\" rel=\"up\">\n\t\t\t\t<span class=\"ipsPager_type\">\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 2 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_back_to_category', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class=\"ipsPager_title ipsType_light ipsTruncate ipsTruncate_line\">\nCONTENT;\n\n$val = \"{$record->container()->_title}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/a>\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$page = \\IPS\\cms\\Pages\\Page::$currentPage;\n$return .= <<<CONTENT\n\n\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $page->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$sprintf = array($page->_title); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_back_to_category_with_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\" rel=\"up\">\n\t\t\t\t<span class=\"ipsPager_type\">\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 2 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_back_to_category', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class=\"ipsPager_title ipsType_light ipsTruncate ipsTruncate_line\">\nCONTENT;\n$return .= htmlspecialchars( $page->_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/a>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\nCONTENT;\n\nif ( $nextUnread !== NULL ):\n$return .= <<<CONTENT\n\n\t\t<div class='ipsGrid_span6 ipsType_right ipsPager_next'>\n\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $nextUnread->url()->setQueryString( array( 'do' => 'getNewComment' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" title='\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_view_next_unread_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n'>\n\t\t\t\t<span class=\"ipsPager_type\">\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_next_unread_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t\t<span class=\"ipsPager_title ipsType_light ipsTruncate ipsTruncate_line\">\nCONTENT;\n$return .= htmlspecialchars( $nextUnread->mapped('title'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/a>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\n\n\nCONTENT;\n\nif ( !$record->container()->disable_sharelinks ):\n$return .= <<<CONTENT\n\n\t<hr class='ipsHr'>\n\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->sharelinks( $record );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<br>\n\nCONTENT;\n\nif ( $commentsAndReviews ):\n$return .= <<<CONTENT\n\n\t<a id=\"replies\"><\/a>\n\t<h2 class='ipsHide'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'user_feedback', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h2>\n\t{$commentsAndReviews}\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n<br>\n\nCONTENT;\n\nif ( $updateForm ):\n$return .= <<<CONTENT\n\n\t<div class='ipsAreaBackground_light ipsPad'>\n\t\t<h2 class='ipsType_sectionHead'>\nCONTENT;\n\n$sprintf = array($record::database()->recordWord( 1 )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'cms_front_update_fields', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n<\/h2>\n\t\t<ul class='ipsForm ipsForm_vertical'>\n\t\t\t{$updateForm}\n\t\t<\/ul>\n\t<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction recordEditLine( $record ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\n<p class='ipsType_reset ipsType_medium ipsType_light' data-excludequote>\n\t<strong>\nCONTENT;\n\n$htmlsprintf = array(\\IPS\\DateTime::ts( $record->record_edit_time )->html(FALSE), htmlspecialchars( $record->record_edit_member_name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'date_edited', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'htmlsprintf' => $htmlsprintf ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\nCONTENT;\n\nif ( $record->record_edit_reason ):\n$return .= <<<CONTENT\n\n\t\t<br>\nCONTENT;\n$return .= htmlspecialchars( $record->record_edit_reason, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $record->database()->revisions and \\IPS\\Settings::i()->edit_log == 2 and ( \\IPS\\Settings::i()->edit_log_public or \\IPS\\Member::loggedIn()->modPermission('can_view_editlog') ) ):\n$return .= <<<CONTENT\n\n\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $record->url('revisions'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_view_revisions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_edit_view_revisions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'content_edit_view_revisions', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\nCONTENT;\n\nif ( !$record->record_edit_show AND \\IPS\\Member::loggedIn()->modPermission('can_view_editlog') ):\n$return .= <<<CONTENT\n\n\t\t<br>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'comment_edit_show_anyways', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/p>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction review( $item, $review, $editorName, $app, $type ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div id='review-\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrap' data-controller='core.front.core.comment' data-commentApp='\nCONTENT;\n$return .= htmlspecialchars( $app, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-commentType='\nCONTENT;\n$return .= htmlspecialchars( $type, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-review' data-commentID=\"\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-quoteData='\nCONTENT;\n\n$return .= htmlspecialchars( json_encode( array('userid' => $review->author()->member_id, 'username' => $review->author()->name, 'timestamp' => $review->mapped('date'), 'contentapp' => $app, 'contenttype' => $type, 'contentid' => $item->id, 'contentcommentid' => $review->id) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsComment_content ipsType_medium'>\n\t<div class='ipsComment_header ipsPhotoPanel ipsPhotoPanel_small ipsPhotoPanel_notPhone'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $review->author(), 'small', $review->warningRef(), 'ipsPos_left' );\n$return .= <<<CONTENT\n\n\t\t<div>\n\t\t\t<p class='ipsPos_right ipsType_reset'>\n\t\t\t\t\nCONTENT;\n\nif ( $review->canReport() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('report'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-remoteSubmit data-ipsDialog-size='medium' data-ipsDialog-flashMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report_submit_success', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-action='reportComment' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'report', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> &middot; \n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\t\t<a class='ipsType_blendLinks' href='\nCONTENT;\n$return .= htmlspecialchars( $review->item()->url()->setQueryString( array( 'do' => 'findReview', 'review' => $review->id ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsTooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share_this_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsMenu data-ipsMenu-closeOnClick='false' id='elShareComment_\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role='shareComment'><i class='fa fa-share-alt'><\/i><\/a>\n\t\t\t\t\nCONTENT;\n\nif ( count( $item->reviewMultimodActions() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<span class='ipsCustomInput'>\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"multimod[\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n]\" value=\"1\" data-role=\"moderation\" data-actions=\"\nCONTENT;\n\nif ( $review->hidden() === -1 AND $review->canUnhide() ):\n$return .= <<<CONTENT\nunhide\nCONTENT;\n\nelseif ( $review->hidden() === 1 AND $review->canUnhide() ):\n$return .= <<<CONTENT\napprove\nCONTENT;\n\nelseif ( $review->canHide() ):\n$return .= <<<CONTENT\nhide\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( $review->canDelete() ):\n$return .= <<<CONTENT\ndelete\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-state='\nCONTENT;\n\nif ( $review->tableStates() ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $review->tableStates(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<span><\/span>\n\t\t\t\t\t<\/span>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<h3 class=\"ipsComment_author ipsType_blendLinks\">\n\t\t\t\t<strong class='ipsType_normal'>\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->userLink( $review->author(), $review->warningRef() );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->reputationBadge( $review->author() );\n$return .= <<<CONTENT\n\n\t\t\t<\/h3>\n\t\t\t<p class=\"ipsComment_meta ipsType_medium ipsType_light\">\n\t\t\t\t\nCONTENT;\n\n$val = ( $review->mapped('date') instanceof \\IPS\\DateTime ) ? $review->mapped('date') : \\IPS\\DateTime::ts( $review->mapped('date') );$return .= $val->html();\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $review->editLine() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot; {$review->editLine()}\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $review->hidden() AND $review->hidden() != 2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot; \nCONTENT;\n$return .= htmlspecialchars( $review->hiddenBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nelseif ( $review->hidden() == -2 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t&middot; \nCONTENT;\n$return .= htmlspecialchars( $review->deletedBlurb(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/p>\n\t\t\t<ul class='ipsList_inline ipsClearfix ipsRating ipsRating_large'>\n\t\t\t\t\nCONTENT;\n\nforeach ( range( 1, intval( \\IPS\\Settings::i()->reviews_rating_out_of ) ) as $i ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<li class='\nCONTENT;\n\nif ( $review->mapped('rating') >= $i ):\n$return .= <<<CONTENT\nipsRating_on\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nipsRating_off\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\t\t\t\t\t<i class='fa fa-star'><\/i>\n\t\t\t\t\t<\/li>\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t<\/ul>&nbsp;&nbsp; \nCONTENT;\n\nif ( $review->mapped('votes_total') ):\n$return .= <<<CONTENT\n<strong class='ipsType_medium'>{$review->helpfulLine()}<\/strong><br>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t<\/div>\n\t<div class='ipsPad'>\n\t\t<div id=\"review-\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-role=\"commentContent\" class=\"ipsType_richText ipsType_normal ipsContained\" data-controller='core.front.core.lightboxedImages'>\n\t\t\t{$review->content()}\n\t\t<\/div>\n\n\t\t\nCONTENT;\n\nif ( $review->hidden() !== 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id and ( !$review->mapped('votes_data') or !array_key_exists( \\IPS\\Member::loggedIn()->member_id, json_decode( $review->mapped('votes_data'), TRUE ) ) ) and $review->author()->member_id != \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span class='ipsType_medium'><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'did_you_find_this_helpful', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong> &nbsp;&nbsp;&nbsp;<a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('rate')->setQueryString( 'helpful', TRUE )->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_light' data-action=\"rateReview\"><i class='fa fa-check'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'yes', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> <a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('rate')->setQueryString( 'helpful', FALSE )->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_light' data-action=\"rateReview\"><i class='fa fa-times'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/span>\n\t\t\t\t<br class='ipsClear'>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\t\t\nCONTENT;\n\nif ( ( \\IPS\\Member::loggedIn()->member_id and ( !$review->mapped('votes_data') or !array_key_exists( \\IPS\\Member::loggedIn()->member_id, json_decode( $review->mapped('votes_data'), TRUE ) ) ) ) || $review->canEdit() || $review->canDelete() || $review->canHide() || $review->canUnhide() || ( $review->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ) || ( $review->hidden() !== 1 && \\IPS\\IPS::classUsesTrait( $review, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled ) ):\n$return .= <<<CONTENT\n\n\t\t\t<div class='ipsItemControls'>\n\t\t\t\t\nCONTENT;\n\nif ( $review->hidden() !== 1 && \\IPS\\IPS::classUsesTrait( $review, 'IPS\\Content\\Reactable' ) and \\IPS\\Settings::i()->reputation_enabled ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->reputation( $review );\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $review->canEdit() || $review->canDelete() || $review->canHide() || $review->canUnhide() || ( $review->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<ul class='ipsComment_controls ipsClearfix ipsItemControls_left' data-role=\"commentControls\">\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->hidden() === 1 && ( $review->canUnhide() || $review->canDelete() ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('unhide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_verySmall ipsButton_positive' data-action='approve'><i class='fa fa-check'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'approve', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('delete')->csrf()->setQueryString('page',\\IPS\\Request::i()->page), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-action='deleteComment' data-updateOnDelete=\"#commentCount\" class='ipsButton ipsButton_verySmall ipsButton_negative'><i class='fa fa-times'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canEdit() || $review->canSplit() || ( $review->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ) ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='#elControls_\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elControls_\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsMenu data-ipsMenu-appendTo='#review-\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrap'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t<ul id='elControls_\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' class='ipsMenu ipsMenu_narrow ipsHide'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->hidden() == -2 AND \\IPS\\Member::loggedIn()->modPermission('can_manage_deleted_content') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('restore')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_visible', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('restore')->csrf()->setQueryString( 'restoreAsHidden', 1 ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'restore_as_hidden', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('delete')->csrf()->setQueryString( 'immediately', 1 ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately_desc', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete_immediately', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->mapped('first') and $review->item()->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->item()->url()->setQueryString( 'do', 'edit' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('edit'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='editComment'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canSplit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('split'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='splitComment' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$sprintf = array(\\IPS\\Member::loggedIn()->language()->addToStack( $item::$title )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'split_to_new', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'split', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canEdit() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('edit'), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-action='editComment'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'edit', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\t\n\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canDelete() || $review->canHide() || $review->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<a href='#elControls_review\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' id='elControls_review\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsMenu data-ipsMenu-appendTo='#review-\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_wrap'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'options', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n &nbsp;<i class='fa fa-caret-down'><\/i><\/a>\n\t\t\t\t\t\t\t\t\t<ul id='elControls_review\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu' class='ipsMenu ipsMenu_narrow ipsHide'>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review instanceof \\IPS\\Content\\Hideable ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( !$review->hidden() and $review->canHide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('hide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'hide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nelseif ( $review->hidden() and $review->canUnhide() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('unhide')->csrf(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'unhide', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nif ( $review->canDelete() ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t\t\t<li class='ipsMenu_item'><a href='\nCONTENT;\n$return .= htmlspecialchars( $review->url('delete')->csrf()->setQueryString('page',\\IPS\\Request::i()->page), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-confirm data-action='deleteComment' data-updateOnDelete=\"#reviewCount\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'delete', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a><\/li>\n\t\t\t\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t<li class='ipsHide' data-role='commentLoading'>\n\t\t\t\t\t\t\t<span class='ipsLoading ipsLoading_tiny ipsLoading_noAnim'><\/span>\n\t\t\t\t\t\t<\/li>\n\t\t\t\t\t<\/ul>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t<\/div>\n\t\n\t<div class='ipsMenu ipsMenu_wide ipsHide cPostShareMenu' id='elShareComment_\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n_menu'>\n\t\t<div class='ipsPad'>\n\t\t\t<h4 class='ipsType_sectionHead'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'share_this_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t<hr class='ipsHr'>\n\t\t\t<h5 class='ipsType_normal ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'link_to_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h5>\n\t\t\t<input type='text' value='\nCONTENT;\n$return .= htmlspecialchars( $review->item()->url()->setQueryString( array( 'do' => 'findReview', 'review' => $review->id ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsField_fullWidth'>\n\t\t<\/div>\n\t<\/div>\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reviewContainer( $item, $review ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $review->isIgnored() ):\n$return .= <<<CONTENT\n\n\t<div class='ipsComment ipsComment_ignored ipsPad_half ipsType_light'>\n\t\t\nCONTENT;\n\n$sprintf = array($review->author()->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'ignoring_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\n\t<\/div>\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t<article id=\"review-\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsComment ipsComment_parent ipsClearfix ipsClear \nCONTENT;\n\nif ( $review->hidden() OR $item->hidden() == -2 ):\n$return .= <<<CONTENT\nipsModerated\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">\n\t\t<a id=\"review-\nCONTENT;\n$return .= htmlspecialchars( $review->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/a>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"display\", \"cms\", 'database' )->review( $item, $review, $item::$formLangPrefix . 'review', $item::$application, $item::$module );\n$return .= <<<CONTENT\n\n\t<\/article>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\treturn $return;\n}\n\n\tfunction reviews( $record ) {\n\t\t$return = '';\n\t\t$return .= <<<CONTENT\n\n<div data-controller='core.front.core.commentFeed' \nCONTENT;\n\nif ( \\IPS\\Settings::i()->auto_polling_enabled ):\n$return .= <<<CONTENT\ndata-autoPoll\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-commentsType='reviews' data-baseURL='\nCONTENT;\n$return .= htmlspecialchars( $record->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' \nCONTENT;\n\nif ( $record->isLastPage('reviews') ):\n$return .= <<<CONTENT\ndata-lastPage\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n data-feedID='records\nCONTENT;\n$return .= htmlspecialchars( $record::$customDatabaseId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-\nCONTENT;\n$return .= htmlspecialchars( $record->id, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n-reviews' id='reviews'>\n\t\nCONTENT;\n\nif ( $record->reviewForm() ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $record->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t<strong class='ipsType_warning'><i class='fa fa-info-circle'><\/i> \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'item_locked_can_review', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div id='elRecordReviewForm'>\n\t\t\t{$record->reviewForm()}\n\t\t<\/div>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( $record->hasReviewed() ):\n$return .= <<<CONTENT\n\n\t\t\t<!-- Already reviewed -->\n\t\t\nCONTENT;\n\nelseif ( $record->locked() ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->commentUnavailable( 'item_locked_cannot_review' );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedin()->restrict_post ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->restrict_post == -1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->reviewUnavailable( 'restricted_cannot_comment' );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->reviewUnavailable( 'restricted_cannot_comment', \\IPS\\Member::loggedIn()->warnings(5,NULL,'rpa'), \\IPS\\Member::loggedIn()->restrict_post );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Member::loggedIn()->members_bitoptions['unacknowledged_warnings'] ):\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"forms\", \"core\", 'front' )->reviewUnavailable( 'unacknowledged_warning_cannot_post', \\IPS\\Member::loggedIn()->warnings( 1, FALSE ) );\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( count( $record->reviews( NULL, NULL, NULL, 'desc', NULL, NULL, NULL, NULL, isset( \\IPS\\Request::i()->showDeleted ) ) ) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( !$record->hasReviewed() ):\n$return .= <<<CONTENT\n<hr class='ipsHr'>\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsClearfix ipsSpacer_bottom\">\n\t\t\t\nCONTENT;\n\nif ( $record->reviewPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<div class=\"ipsPos_left ipsResponsive_noFloat\">\n\t\t\t\t\t{$record->reviewPagination( array( 'tab', 'sort' ) )}\n\t\t\t\t<\/div>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<div class=\"ipsClearfix ipsPos_right ipsResponsive_hidePhone\">\n\t\t\t\t<ul class=\"ipsButtonRow ipsClearfix\">\n\t\t\t\t\t<li data-action=\"tableFilter\">\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $record->url()->setQueryString( array( 'd' => $record::$customDatabaseId, 'tab' => 'reviews', 'page' => 1, 'sort' => 'helpful' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"\nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->sort ) or \\IPS\\Request::i()->sort != 'newest' ):\n$return .= <<<CONTENT\nipsButtonRow_active\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-action=\"filterClick\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'most_helpful', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li data-action=\"tableFilter\">\n\t\t\t\t\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $record->url()->setQueryString( array( 'd' => $record::$customDatabaseId, 'tab' => 'reviews', 'page' => 1, 'sort' => 'newest' ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"\nCONTENT;\n\nif ( isset( \\IPS\\Request::i()->sort ) and \\IPS\\Request::i()->sort == 'newest' ):\n$return .= <<<CONTENT\nipsButtonRow_active\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" data-action=\"filterClick\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'newest', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t\n\t\t<div data-role='commentFeed' data-controller='core.front.core.moderation'>\n\t\t\t<form action=\"\nCONTENT;\n$return .= htmlspecialchars( $record->url()->csrf()->setQueryString( 'do', 'multimodReview' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" method=\"post\" data-ipsPageAction data-role='moderationTools'>\n\t\t\t\t\nCONTENT;\n\n$reviewCount=0; $timeLastRead = $record->timeLastRead(); $lined = FALSE;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nforeach ( $record->reviews( NULL, NULL, NULL, 'desc', NULL, NULL, NULL, NULL, isset( \\IPS\\Request::i()->showDeleted ) ) as $review ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nif ( !$lined and $timeLastRead and $timeLastRead->getTimestamp() < $review->mapped('date') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\nCONTENT;\n\nif ( $lined = TRUE and $reviewCount ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t\t\t<hr class=\"ipsCommentUnreadSeperator\">\n\t\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\t\nCONTENT;\n\n$reviewCount++;\n$return .= <<<CONTENT\n\n\t\t\t\t\t{$review->html()}\n\t\t\t\t\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\cms\\_Theme::i()->getTemplate( \"global\", \"core\" )->commentMultimod( $record, 'review' );\n$return .= <<<CONTENT\n\n\t\t\t<\/form>\n\t\t<\/div>\n\t\t\nCONTENT;\n\nif ( $record->reviewPageCount() > 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div>\n\t\t\t\t{$record->reviewPagination( array( 'tab', 'sort' ) )}\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nelseif ( !$record->canReview() ):\n$return .= <<<CONTENT\n\n\t\t<p class=\"ipsType_normal ipsType_light ipsType_reset\" data-role=\"noReviews\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_reviews', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\treturn $return;\n}}"
VALUE;
